kind: pipeline
name: default

trigger:
  ref:
    - refs/heads/master

steps:
  # Restore the cache if it exists
  - name: restore-cache
    image: homerovalle/drone-gcs-cache
    settings:
      pull: true
      bucket: bip-drone-dependency-cache
      json_key:
        from_secret: gcs_credentials
      restore: true

  - name: authenticate
    image: robertstettner/drone-mvn-auth
    pull: always
    settings:
      servers:
        from_secret: maven_servers
      profiles:
        - id: ssb-bip
          repositories:
            - id: ssb-bip-releases
              url: https://nexus.prod-bip-ci.ssb.no/repository/maven-releases/
              layout: default
            - id: ssb-bip-snapshots
              url: https://nexus.prod-bip-ci.ssb.no/repository/maven-snapshots/
              layout: default

  - name: build
    image: maven:3-jdk-11
    commands:
      - mvn compile -P ssb-bip -Dmaven.repo.local=/drone/src/.m2/repository -DskipTests=true -Dmaven.javadoc.skip=true --batch-mode --global-settings settings.xml
    depends_on:
      - authenticate
      - restore-cache

  - name: test
    image: maven:3-jdk-11
    commands:
      - mvn verify test -P ssb-bip -Dmaven.repo.local=/drone/src/.m2/repository --batch-mode --global-settings settings.xml
    depends_on:
      - build

#  - name: sonarqube
#    image: maven:3-jdk-11
#    commands:
#      - mvn -X -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_PROJECTKEY sonar:sonar -P ssb-bip -Dmaven.repo.local=/drone/src/.m2/repository -Dmaven.javadoc.skip=true --batch-mode --global-settings settings.xml
#    environment:
#      SONAR_HOST_URL: https://sonarqube.prod-bip-ci.ssb.no
#      SONAR_PROJECTKEY:
#        from_secret: sonar_token
#    depends_on:
#      - test

  - name: publish-docker-image
    image: plugins/gcr
    settings:
      repo: prod-bip/rawdata-converter-app-sirius
      registry: eu.gcr.io
      tags: "${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:8}"
      json_key:
        from_secret: gcr_credentials
    depends_on:
#      - sonarqube
      - test

  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook_url
      channel: bip-ci-test
    when:
      status: [ success, failure ]
    depends_on:
#      - sonarqube
      - test

  # Rebuild cache if it has changed with this build
  - name: rebuild-cache
    image: homerovalle/drone-gcs-cache
    settings:
      pull: true
      bucket: bip-drone-dependency-cache
      json_key:
        from_secret: gcs_credentials
      rebuild: true
      mount:
        - .m2/repository
    depends_on:
#      - sonarqube
      - test

  # OPTIONAL: Flush the cache of old cache items (older than 14 days)
  - name: flush-cache
    image: homerovalle/drone-gcs-cache
    settings:
      pull: true
      bucket: bip-drone-dependency-cache
      json_key:
        from_secret: gcs_credentials
      flush: true
      flush_age: 14
    depends_on:
#      - sonarqube
      - test

---

kind: pipeline
name: tag-production-image
type: docker

trigger:
  ref:
    - refs/tags/*[0-9].*[0-9].*[0-9]

steps:
  - name: tag-docker-image
    image: docker
    #      volumes:
    #        - name: dockersock
    #          path: /var/run/docker.sock
    commands:
      - echo $JSON_KEY | docker login -u _json_key --password-stdin https://eu.gcr.io
      # Pull the image published in the 'publish-docker' step
      - docker pull "eu.gcr.io/prod-bip/rawdata-converter-app-sirius:master-${DRONE_COMMIT_SHA:0:8}"
      # Tag the image with the git tag
      - docker tag "eu.gcr.io/prod-bip/rawdata-converter-app-sirius:master-${DRONE_COMMIT_SHA:0:8}" "eu.gcr.io/prod-bip/rawdata-converter-app-sirius:${DRONE_TAG}"
      - docker push "eu.gcr.io/prod-bip/rawdata-converter-app-sirius:${DRONE_TAG}"
    environment:
      JSON_KEY:
        from_secret: gcr_credentials

  - name: slack-image-tag
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook_url
      channel: bip-ci-test
      template: >
        {{#success build.status}}:white_check_mark:{{ else }}:x:{{/success}}
        *{{ uppercasefirst build.status }}: Build #{{ build.number }}* (type: `{{build.event}}`)

        Tagging Docker image with {{ build.tag }} to promote commit {{ build.commit }} (with tag {{ build.tag }}).

        Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>

        Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>

        Author: {{ build.author }}

        <{{ build.link }}|{{ build.link }}>
    when:
      status: [ success, failure ]
    depends_on:
      - tag-docker-image


---
kind: secret
name: maven_servers
get:
  path: drone-maven-servers
  name: ssb-bip-maven-servers
---
kind: secret
name: slack_webhook_url
get:
  path: drone-slack-webhook-url
  name: slack-webhook-url
---
kind: secret
name: sonar_host
get:
  path: drone-sonarqube-configuration
  name: url
---
kind: secret
name: sonar_token
get:
  path: drone-sonarqube-configuration
  name: token
---
kind: secret
name: gcr_credentials
get:
  path: drone-gcr-credentials
  name: gcr-credentials
---
kind: secret
name: gcs_credentials
get:
  path: drone-gcs-credentials
  name: gcs-credentials
